version: "3"

volumes:
  ckan_storage:
  pg_data:
  solr_data:
  matomo_data:
  mariadb_data:


services:

  ckan-dev:
    container_name: ${CKAN_CONTAINER_NAME}
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:${CKAN_PORT}"
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./src:/srv/app/src_extensions
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-qO",
          "/dev/null",
          "http://localhost:5000"
        ]

  # datapusher:
  #   container_name: ${DATAPUSHER_CONTAINER_NAME}
  #   image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]

  db:
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER}",
          "-d",
          "${POSTGRES_DB}"
        ]

  solr:
    container_name: ${SOLR_CONTAINER_NAME}
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    ports:
      - "8983:8983"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-qO",
          "/dev/null",
          "http://localhost:8983/solr/"
        ]

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-e", "QUIT" ]

  matomo:
    container_name: ${MATOMO_CONTAINER_NAME}
    image: matomo:${MATOMO_VERSION}
    volumes:
      - matomo_data:/var/www/html
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      - MATOMO_DATABASE_HOST
      - MATOMO_DATABASE_ADAPTER
      - MATOMO_DATABASE_TABLES_PREFIX
      - MATOMO_DATABASE_USERNAME
      - MATOMO_DATABASE_PASSWORD
      - MATOMO_DATABASE_DBNAME
    ports:
      - "${MATOMO_PORT_HOST}:80"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-qO",
          "/dev/null",
          "http://localhost:80"
        ]

  mariadb:
    container_name: ${MARIADB_CONTAINER_NAME}
    image: mariadb:${MARIADB_VERSION}
    command: --max-allowed-packet=64MB
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD
      - MARIADB_AUTO_UPGRADE
      - MARIADB_DISABLE_UPGRADE_BACKUP
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MARIADB_INITDB_SKIP_TZINFO
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
